* TooLoo

Got an overwhelming number of command line scripts and functions? So
many you've actually started to forget what options you have available,
or what some of them do? Try TooLoo!

* What does it do?
:PROPERTIES:
:CUSTOM_ID: what-does-it-do
:END:
TooLoo allows provides a [[https://en.wikipedia.org/wiki/Full-text_search][full text search]] of the name, description, and details of
your scripts. When a script includes a "help" command, TooLoo will call it and
display current usage docs instead of potentially outdated ones from its cache.

Scroll down to see some examples of its output.

Additionally, TooLoo can generate a static web site with a built-in [[https://lunrjs.com/][Lunr]] search
to document all your commands. To accomplish this, TooLoo generates the Markdown
files, and [[https://gohugo.io/][Hugo]] builds the search index, and converts it to a site for you.

* Usage
#+begin_example
Usage:
  tooloo -V|--version[=Any] [--verbose[=Any]]
  tooloo add <file_path> -- Add & updates documentation of a command with a .toml file, or an ansiicast demo with a .cast file
  tooloo add-many <directory_path> -- Add / update all .toml & .cast files in a directory or its children.
  tooloo demo <command_name> -- play the asciicast demo of the specified command
  tooloo demos -- List all your commands that have associated asciicast demos
  tooloo find [<search_strings> ...] -- Execute a full text against documented commands. Search terms should be separate arguments.
  tooloo list -- List all your commands & their quick description
  tooloo list <filter> -- Lists a filtered subset of commands via filter: 'demos'
  tooloo list-json
  tooloo export <format> <export_directory> -- Create a static blog documenting all your commands
  tooloo remove <command_name> -- Remove a command from the database
  tooloo serve <hostname> [<port>] -- Starts a mini JSON REST server (will lock the db)
  tooloo show <command_name> -- Display the full details of a specific command
  tooloo show-json <command_name>
  tooloo template <command_name> -- Generate a blank TOML template alongside the specified command
  tooloo update <path> -- Updates documentation of a command with a .toml file, or an ansiicast demo with a .cast file

    <file_path>           Paths must end in .toml or .cast
    <directory_path>      Path to dir to search for .toml & .cast files
    <filter>              Currently supported filters: demos
    <format>              Currently supported formats: hugo
    <export_directory>    the directory to export to
    <hostname>            Hostname or IP address to bind to (0.0.0.0 / localhost)
    [<port>]              port to use, defaults to 6996 [default: 6996]
    <command_name>        The name of the executable
#+end_example


* Want All The Docs?

[[https://tooloo.dev][TooLoo.dev]] has got you covered.

I'm a big fan of README Driven Development, but this README was getting to be too much for one page.
